openapi: 3.0.3
info:
  title: Honey morning API
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /api/v1/users:
    post:
      summary: User sign-up
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUser"
      responses:
        "200":
          description: Access token and refresh token obtained successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthRegisterResponse"

        "422":
          description: Email has already been taken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCreated"
              example:
                message: [
                  "Email has already been taken"     
                ] 

  /oauth/token:
    post:
      summary: Authenticate user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthLoginRequest" 
      responses:
        "200":
          description: Access token and refresh token obtained successfully
          content:
            application/json:
              schema:
                ref: "#/components/schemas/AuthLoginResponse"
        "400 (wrong password)":
          description: Wrong user's password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "invalid_grant"
                error_description: "The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client."
        "400 (bad request)":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  error:
                    error_description: string
              example:
                error: "unsupported_grant_type"
                error_description: "The authorization grant type is not supported by the authorization server."
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized" 

  /api/v1/posts:
    get:
      summary: Get a list of posts
      tags:
        - Posts
      responses:
        "200":
          description: A list of posts
          content:
            application/json:
              schema:
                type: object
              example:
                message: "Fetch all posts successfully"
                metadata:
                  - post:
                      id: 1
                      user_id: 2
                      title: "Today, it is very good outside üèñÔ∏è"
                      body: "Let's chill with our children"
                      created_at: "2024-01-27T14:30:40.808Z"
                      updated_at: "2024-01-27T14:30:40.808Z"
                    images:
                      - media_url: "http://honey-morning-bucket-storage.s3.ap-southeast-1.amazonaws.com/333481aa0824c4ef.jpg"
                        media_type: "image"
                  - post:
                      id: 2
                      user_id: 2
                      title: "Morning routine"
                      body: "Improve your mental and physical health"
                      created_at: "2024-01-27T14:32:24.388Z"
                      updated_at: "2024-01-27T14:32:24.388Z"
                    images:
                      - media_url: "http://honey-morning-bucket-storage.s3.ap-southeast-1.amazonaws.com/e2baef2c1366970f.jpg"
                        media_type: "image"

    post:
      summary: Create a new post
      tags:
        - Posts
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/NewPost"
      responses:
        "201":
          description: Post created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostCreated"
              example:
                message: "Created post successfully"
                metadata:
                  post:
                    id: 3
                    user_id: 2
                    title: "Post title"
                    body: "Post body"
                    created_at: "2024-01-27T14:36:11.800Z"
                    updated_at: "2024-01-27T14:36:11.800Z"
                  images:
                    - media_url: "http://honey-morning-bucket-storage.s3.ap-southeast-1.amazonaws.com/d87fdaf7175461ff.jpeg"
                      media_type: "image"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                message: "Unauthorized"
                detail: "The access token is invalid"

  /api/v1/posts/{id}:
    get:
      summary: Get a post by ID
      tags:
        - Posts
      parameters:
        - name: id
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: A post
          content:
            application/json:
              schema:
                type: object
              example:
                message: "Fetch post successfully"
                metadata:
                  - post:
                      id: 1
                      user_id: 2
                      title: "Today, it is very good outside üèñÔ∏è"
                      body: "Let's chill with our children"
                      created_at: "2024-01-27T14:30:40.808Z"
                      updated_at: "2024-01-27T14:30:40.808Z"
                    images:
                      - media_url: "http://honey-morning-bucket-storage.s3.ap-southeast-1.amazonaws.com/333481aa0824c4ef.jpg"
                        media_type: "image"

components:
  schemas:
    AuthLoginRequest:
      type: object
      properties:
        grant_type:
          type: string
          example: "password"
        email:
          type: string
          example: "thanglearndevops@gmail.com"
        password:
          type: string
          example: "thang123"
        client_id:
          type: string
          example: "x6CJ4b5BqZddmKIgyUWWL1omIB6f8SNOPI1HGYkIV_o"
        client_secret:
          type: string
          example: "XD_ehOAZPc6fJAy4mkovw75BTsw4E3IXN2F5Z6EfzsA"

    AuthLoginResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer
        refresh_token:
          type: string
        created_at:
          type: string
          format: date-time

    Unauthorized:
      type: object
      properties:
        message:
          type: string
        detail:
          type: string

    NewUser:
      type: object
      properties:
        client_id:
          type: string
        email:
          type: string
        password:
          type: string

    UserCreated:
      type: object
      properties:
        message:
          type: string
        metadata:
          type: object
          properties:
            id:
              type: integer
            email:
              type: string
            access_token:
              type: string
            token_type:
              type: string
            expires_in:
              type: integer
            refresh_token:
              type: string
            created_at:
              type: integer

    AuthRegisterResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer
        refresh_token:
          type: string
        created_at:
          type: string
          format: date-time

    Post:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        title:
          type: string
        body:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    PostCreated:
      type: object
      properties:
        message:
          type: string
        metadata:
          type: object
          properties:
            post:
              $ref: "#/components/schemas/Post"
            images:
              type: array
              items:
                $ref: "#/components/schemas/PostImage"


    PostImage:
      type: object
      properties:
        media_url:
          type: string
        media_type:
          type: string

    NewPost:
      type: object
      properties:
        post[title]:
          type: string
        post[body]:
          type: string
        post[media]:
          type: file

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
